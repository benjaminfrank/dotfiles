# -*- mode: snippet -*-
#name: typeclass
# --
import simulacrum._

@typeclass
trait ${1:}[A] { self =>
  def ${2:}(a: A): ${3:}

  @noop final def contraMap[B](f: B => A): $1[B] = new $1[B] {
    final override def $2(a: B): $3 = self.$2(f(a))
  }
}

object $1 extends DefaultInstances

trait DefaultInstances {
  def instance[A](f: A => $3): $1[A] = new $1[A] {
    override def $2(a: A): $3 = f(a)
  }

  implicit val $1Boolean: $1[Boolean] = instance(
    b => ???
  )
}
